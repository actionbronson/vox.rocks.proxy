# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class VoxTrack(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, album_artist_name: str=None, album_id: str=None, album_name: str=None, artist_name: str=None, bitrate: int=None, date_added: int=None, disc_number: int=None, disc_total: int=None, file_item_data_sha1: str=None, file_item_ext: str=None, file_item_id: str=None, file_item_sha1: str=None, file_item_size: int=None, id: str=None, genre: str=None, release_year: int=None, sample_rate: int=None, track_number: int=None):  # noqa: E501
        """VoxTrack - a model defined in Swagger

        :param name: The name of this VoxTrack.  # noqa: E501
        :type name: str
        :param album_artist_name: The album_artist_name of this VoxTrack.  # noqa: E501
        :type album_artist_name: str
        :param album_id: The album_id of this VoxTrack.  # noqa: E501
        :type album_id: str
        :param album_name: The album_name of this VoxTrack.  # noqa: E501
        :type album_name: str
        :param artist_name: The artist_name of this VoxTrack.  # noqa: E501
        :type artist_name: str
        :param bitrate: The bitrate of this VoxTrack.  # noqa: E501
        :type bitrate: int
        :param date_added: The date_added of this VoxTrack.  # noqa: E501
        :type date_added: int
        :param disc_number: The disc_number of this VoxTrack.  # noqa: E501
        :type disc_number: int
        :param disc_total: The disc_total of this VoxTrack.  # noqa: E501
        :type disc_total: int
        :param file_item_data_sha1: The file_item_data_sha1 of this VoxTrack.  # noqa: E501
        :type file_item_data_sha1: str
        :param file_item_ext: The file_item_ext of this VoxTrack.  # noqa: E501
        :type file_item_ext: str
        :param file_item_id: The file_item_id of this VoxTrack.  # noqa: E501
        :type file_item_id: str
        :param file_item_sha1: The file_item_sha1 of this VoxTrack.  # noqa: E501
        :type file_item_sha1: str
        :param file_item_size: The file_item_size of this VoxTrack.  # noqa: E501
        :type file_item_size: int
        :param id: The id of this VoxTrack.  # noqa: E501
        :type id: str
        :param genre: The genre of this VoxTrack.  # noqa: E501
        :type genre: str
        :param release_year: The release_year of this VoxTrack.  # noqa: E501
        :type release_year: int
        :param sample_rate: The sample_rate of this VoxTrack.  # noqa: E501
        :type sample_rate: int
        :param track_number: The track_number of this VoxTrack.  # noqa: E501
        :type track_number: int
        """
        self.swagger_types = {
            'name': str,
            'album_artist_name': str,
            'album_id': str,
            'album_name': str,
            'artist_name': str,
            'bitrate': int,
            'date_added': int,
            'disc_number': int,
            'disc_total': int,
            'file_item_data_sha1': str,
            'file_item_ext': str,
            'file_item_id': str,
            'file_item_sha1': str,
            'file_item_size': int,
            'id': str,
            'genre': str,
            'release_year': int,
            'sample_rate': int,
            'track_number': int
        }

        self.attribute_map = {
            'name': 'name',
            'album_artist_name': 'album_artist_name',
            'album_id': 'album_id',
            'album_name': 'album_name',
            'artist_name': 'artist_name',
            'bitrate': 'bitrate',
            'date_added': 'date_added',
            'disc_number': 'disc_number',
            'disc_total': 'disc_total',
            'file_item_data_sha1': 'file_item_data_sha1',
            'file_item_ext': 'file_item_ext',
            'file_item_id': 'file_item_id',
            'file_item_sha1': 'file_item_sha1',
            'file_item_size': 'file_item_size',
            'id': 'id',
            'genre': 'genre',
            'release_year': 'release_year',
            'sample_rate': 'sample_rate',
            'track_number': 'track_number'
        }
        self._name = name
        self._album_artist_name = album_artist_name
        self._album_id = album_id
        self._album_name = album_name
        self._artist_name = artist_name
        self._bitrate = bitrate
        self._date_added = date_added
        self._disc_number = disc_number
        self._disc_total = disc_total
        self._file_item_data_sha1 = file_item_data_sha1
        self._file_item_ext = file_item_ext
        self._file_item_id = file_item_id
        self._file_item_sha1 = file_item_sha1
        self._file_item_size = file_item_size
        self._id = id
        self._genre = genre
        self._release_year = release_year
        self._sample_rate = sample_rate
        self._track_number = track_number

    @classmethod
    def from_dict(cls, dikt) -> 'VoxTrack':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VoxTrack of this VoxTrack.  # noqa: E501
        :rtype: VoxTrack
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this VoxTrack.


        :return: The name of this VoxTrack.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this VoxTrack.


        :param name: The name of this VoxTrack.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def album_artist_name(self) -> str:
        """Gets the album_artist_name of this VoxTrack.


        :return: The album_artist_name of this VoxTrack.
        :rtype: str
        """
        return self._album_artist_name

    @album_artist_name.setter
    def album_artist_name(self, album_artist_name: str):
        """Sets the album_artist_name of this VoxTrack.


        :param album_artist_name: The album_artist_name of this VoxTrack.
        :type album_artist_name: str
        """

        self._album_artist_name = album_artist_name

    @property
    def album_id(self) -> str:
        """Gets the album_id of this VoxTrack.


        :return: The album_id of this VoxTrack.
        :rtype: str
        """
        return self._album_id

    @album_id.setter
    def album_id(self, album_id: str):
        """Sets the album_id of this VoxTrack.


        :param album_id: The album_id of this VoxTrack.
        :type album_id: str
        """

        self._album_id = album_id

    @property
    def album_name(self) -> str:
        """Gets the album_name of this VoxTrack.


        :return: The album_name of this VoxTrack.
        :rtype: str
        """
        return self._album_name

    @album_name.setter
    def album_name(self, album_name: str):
        """Sets the album_name of this VoxTrack.


        :param album_name: The album_name of this VoxTrack.
        :type album_name: str
        """

        self._album_name = album_name

    @property
    def artist_name(self) -> str:
        """Gets the artist_name of this VoxTrack.


        :return: The artist_name of this VoxTrack.
        :rtype: str
        """
        return self._artist_name

    @artist_name.setter
    def artist_name(self, artist_name: str):
        """Sets the artist_name of this VoxTrack.


        :param artist_name: The artist_name of this VoxTrack.
        :type artist_name: str
        """

        self._artist_name = artist_name

    @property
    def bitrate(self) -> int:
        """Gets the bitrate of this VoxTrack.


        :return: The bitrate of this VoxTrack.
        :rtype: int
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate: int):
        """Sets the bitrate of this VoxTrack.


        :param bitrate: The bitrate of this VoxTrack.
        :type bitrate: int
        """

        self._bitrate = bitrate

    @property
    def date_added(self) -> int:
        """Gets the date_added of this VoxTrack.


        :return: The date_added of this VoxTrack.
        :rtype: int
        """
        return self._date_added

    @date_added.setter
    def date_added(self, date_added: int):
        """Sets the date_added of this VoxTrack.


        :param date_added: The date_added of this VoxTrack.
        :type date_added: int
        """

        self._date_added = date_added

    @property
    def disc_number(self) -> int:
        """Gets the disc_number of this VoxTrack.


        :return: The disc_number of this VoxTrack.
        :rtype: int
        """
        return self._disc_number

    @disc_number.setter
    def disc_number(self, disc_number: int):
        """Sets the disc_number of this VoxTrack.


        :param disc_number: The disc_number of this VoxTrack.
        :type disc_number: int
        """

        self._disc_number = disc_number

    @property
    def disc_total(self) -> int:
        """Gets the disc_total of this VoxTrack.


        :return: The disc_total of this VoxTrack.
        :rtype: int
        """
        return self._disc_total

    @disc_total.setter
    def disc_total(self, disc_total: int):
        """Sets the disc_total of this VoxTrack.


        :param disc_total: The disc_total of this VoxTrack.
        :type disc_total: int
        """

        self._disc_total = disc_total

    @property
    def file_item_data_sha1(self) -> str:
        """Gets the file_item_data_sha1 of this VoxTrack.


        :return: The file_item_data_sha1 of this VoxTrack.
        :rtype: str
        """
        return self._file_item_data_sha1

    @file_item_data_sha1.setter
    def file_item_data_sha1(self, file_item_data_sha1: str):
        """Sets the file_item_data_sha1 of this VoxTrack.


        :param file_item_data_sha1: The file_item_data_sha1 of this VoxTrack.
        :type file_item_data_sha1: str
        """

        self._file_item_data_sha1 = file_item_data_sha1

    @property
    def file_item_ext(self) -> str:
        """Gets the file_item_ext of this VoxTrack.


        :return: The file_item_ext of this VoxTrack.
        :rtype: str
        """
        return self._file_item_ext

    @file_item_ext.setter
    def file_item_ext(self, file_item_ext: str):
        """Sets the file_item_ext of this VoxTrack.


        :param file_item_ext: The file_item_ext of this VoxTrack.
        :type file_item_ext: str
        """

        self._file_item_ext = file_item_ext

    @property
    def file_item_id(self) -> str:
        """Gets the file_item_id of this VoxTrack.


        :return: The file_item_id of this VoxTrack.
        :rtype: str
        """
        return self._file_item_id

    @file_item_id.setter
    def file_item_id(self, file_item_id: str):
        """Sets the file_item_id of this VoxTrack.


        :param file_item_id: The file_item_id of this VoxTrack.
        :type file_item_id: str
        """

        self._file_item_id = file_item_id

    @property
    def file_item_sha1(self) -> str:
        """Gets the file_item_sha1 of this VoxTrack.


        :return: The file_item_sha1 of this VoxTrack.
        :rtype: str
        """
        return self._file_item_sha1

    @file_item_sha1.setter
    def file_item_sha1(self, file_item_sha1: str):
        """Sets the file_item_sha1 of this VoxTrack.


        :param file_item_sha1: The file_item_sha1 of this VoxTrack.
        :type file_item_sha1: str
        """

        self._file_item_sha1 = file_item_sha1

    @property
    def file_item_size(self) -> int:
        """Gets the file_item_size of this VoxTrack.


        :return: The file_item_size of this VoxTrack.
        :rtype: int
        """
        return self._file_item_size

    @file_item_size.setter
    def file_item_size(self, file_item_size: int):
        """Sets the file_item_size of this VoxTrack.


        :param file_item_size: The file_item_size of this VoxTrack.
        :type file_item_size: int
        """

        self._file_item_size = file_item_size

    @property
    def id(self) -> str:
        """Gets the id of this VoxTrack.


        :return: The id of this VoxTrack.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this VoxTrack.


        :param id: The id of this VoxTrack.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def genre(self) -> str:
        """Gets the genre of this VoxTrack.


        :return: The genre of this VoxTrack.
        :rtype: str
        """
        return self._genre

    @genre.setter
    def genre(self, genre: str):
        """Sets the genre of this VoxTrack.


        :param genre: The genre of this VoxTrack.
        :type genre: str
        """

        self._genre = genre

    @property
    def release_year(self) -> int:
        """Gets the release_year of this VoxTrack.


        :return: The release_year of this VoxTrack.
        :rtype: int
        """
        return self._release_year

    @release_year.setter
    def release_year(self, release_year: int):
        """Sets the release_year of this VoxTrack.


        :param release_year: The release_year of this VoxTrack.
        :type release_year: int
        """

        self._release_year = release_year

    @property
    def sample_rate(self) -> int:
        """Gets the sample_rate of this VoxTrack.


        :return: The sample_rate of this VoxTrack.
        :rtype: int
        """
        return self._sample_rate

    @sample_rate.setter
    def sample_rate(self, sample_rate: int):
        """Sets the sample_rate of this VoxTrack.


        :param sample_rate: The sample_rate of this VoxTrack.
        :type sample_rate: int
        """

        self._sample_rate = sample_rate

    @property
    def track_number(self) -> int:
        """Gets the track_number of this VoxTrack.


        :return: The track_number of this VoxTrack.
        :rtype: int
        """
        return self._track_number

    @track_number.setter
    def track_number(self, track_number: int):
        """Sets the track_number of this VoxTrack.


        :param track_number: The track_number of this VoxTrack.
        :type track_number: int
        """

        self._track_number = track_number
